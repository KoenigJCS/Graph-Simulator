// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel TestEval

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
struct Individual{
    float fitness;
    int chromosomeLength;
    float2 chromosomes[48];
    int nodeIDs[48];
};

RWStructuredBuffer<Individual> dataBuf;

[numthreads(16,1,1)]
void TestEval (uint3 id : SV_DispatchThreadID)
{
    Individual curInduvidual = dataBuf[id.x];

    float length;
    for(int i = 0;i<47;i++)
    {
        length+=distance(curInduvidual.chromosomes[i],curInduvidual.chromosomes[i+1]);
    }
    length+=distance(curInduvidual.chromosomes[47],curInduvidual.chromosomes[0]);
    
    curInduvidual.fitness=length;
}
